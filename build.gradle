plugins {
    // To create a shadow/fat jar, including dependencies
    //id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java-library'
    alias(libs.plugins.javafx)
}

ext.moduleName = 'qupath.extension.biop.hrm'
ext.qupathVersion = gradle.ext.qupathVersion

archivesBaseName = 'qupath-extension-biop-hrm'
description = "QuPath extension to send/retrieve data from HRM server."
group = "ch.epfl.biop"
version = "0.2.1-SNAPSHOT"

repositories {
  maven{
        url "https://maven.scijava.org/content/groups/public"
  }
    maven{
        url "https://artifacts.igred.fr/releases"
    }
    flatDir {
        dirs '.\\..\\qupath-extension-biop-omero\\build\\libs'
    }
}

configurations {
    implementation.extendsFrom bioformats

}

dependencies {
    implementation "io.github.qupath:qupath-extension-bioformats:${qupathVersion}"
    implementation "io.github.qupath:qupath-fxtras:0.1.0"
    implementation "io.github.qupath:qupath-core:${qupathVersion}"
    implementation "io.github.qupath:qupath-gui-fx:${qupathVersion}"

    implementation "org.openmicroscopy:omero-gateway:5.8.1"
    implementation "ch.epfl.biop:qupath-extension-biop-omero:1.0.0-SNAPSHOT"
    implementation "org.jsoup:jsoup:1.15.4"
    implementation "fr.igred:simple-omero-client:5.16.0"
}

processResources {
    from ("${projectDir}/LICENSE.txt") {
        into 'licenses/'
    }
}

tasks.register("copyDependencies", Copy) {
    description "Copy dependencies into the output libs directory"
    group "QuPath"

    from configurations.default
    into 'build/libs'
}

java {
    def version = project.findProperty('toolchain')
    if (!version)
        version = libs.versions.jdk.get()
    else if (version.strip() == 'skip')
        version = null
    if (version != null) {
        logger.quiet("Setting toolchain to {}", version)
        toolchain {
            languageVersion = JavaLanguageVersion.of(version)
        }
    }
}

javadoc {
    options.addBooleanOption('html5', true)
    destinationDir = new File(project.rootDir,"docs")
}

jar {
    // Important to set version so this can be queried within QuPath
    manifest {
        def manifestAttributes = [
                "Implementation-Vendor": "QuPath developers",
                "Implementation-Version": project.version,
                //               'Automatic-Module-Name': "io.github." + moduleName,
                "QuPath-build-time": new Date().format("yyyy-MM-dd, HH:mm")
        ]

        attributes(manifestAttributes)
    }
}